{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "redisCacheName": {
      "type": "string"
    },
    "redisCacheSKU": {
      "type": "string",
      "defaultValue": "Basic"
    },
    "redisCacheFamily": {
      "type": "string",
      "defaultValue": "C"
    },
    "redisCacheCapacity": {
      "type": "int",
      "defaultValue": 1
    },
    "enableNonSslPort": {
      "type": "bool",
      "defaultValue": false
    },
    "minimumTlsVersion": {
      "type": "string",
      "defaultValue": "1.0",
      "allowedValues": [
        "1.0",
        "1.1",
        "1.2"
       ]
    },
    "dataPersistence": {
      "type": "string",
      "defaultValue": "disabled",
      "allowedValues": [
        "disabled",
        "rdb",
        "aof"
      ],
      "metadata": {
        "description": "Data persistence settings. Can only be used where the redisCacheSku is set to 'Premium'. Requires a storage account for this feature to be enabled."
      }
    },
    "rdbBackupFrequencyMinutes": {
      "type": "int",
      "defaultValue": 60,
      "metadata": {
        "description": "Time between backups in minutes."
      }
    },
    "storageConnectionString": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Connection string of the storage account to store the Redis persistence data in. Redis will create a new container for each node. Only required if 'dataPersistence' is set to 'aof'."
      }
    },
    "resourceTags": {
      "type": "object",
      "defaultValue": {}
    }
  },
  "variables": {
    "persistence-aof-config": "[if(and(equals(parameters('redisCacheSKU'), 'Premium'), equals(parameters('dataPersistence'), 'aof')), json(concat('{\"aof-backup-enabled\": \"true\", \"aof-storage-connection-string-0\": \"', parameters('storageConnectionString'), '\", \"aof-storage-connection-string-1\": \"', parameters('storageConnectionString'), '\"}')), json('{}'))]",
    "persistence-rdb-config": "[if(and(equals(parameters('redisCacheSKU'), 'Premium'), equals(parameters('dataPersistence'), 'rdb')), json(concat('{\"rdb-backup-enabled\": \"true\", \"rdb-backup-frequency\": \"', string(parameters('rdbBackupFrequencyMinutes')), '\", \"rdb-storage-connection-string\": \"', parameters('storageConnectionString'), '\"}')), json('{}'))]"
  },
  "resources": [
    {
      "apiVersion": "2018-03-01",
      "name": "[parameters('redisCacheName')]",
      "type": "Microsoft.Cache/Redis",
      "location": "[resourceGroup().location]",
      "tags": "[parameters('resourceTags')]",
      "properties": {
        "enableNonSslPort": "[parameters('enableNonSslPort')]",
        "minimumTlsVersion": "[parameters('minimumTlsVersion')]",
        "sku": {
          "capacity": "[parameters('redisCacheCapacity')]",
          "family": "[parameters('redisCacheFamily')]",
          "name": "[parameters('redisCacheSKU')]"
        },
        "redisConfiguration": "[union(variables('persistence-aof-config'), variables('persistence-rdb-config'))]"
      }
    }
  ],
  "outputs": {
    "PrimaryKey": {
      "type": "securestring",
      "value": "[listKeys(resourceId('Microsoft.Cache/Redis', parameters('redisCacheName')),'2018-03-01').primaryKey]"
    },
    "SecondaryKey": {
      "type": "securestring",
      "value": "[listKeys(resourceId('Microsoft.Cache/Redis', parameters('redisCacheName')),'2018-03-01').secondaryKey]"
    },
    "PrimaryConnectionString": {
      "type": "securestring",
      "value": "[concat(parameters('redisCacheName'), '.redis.cache.windows.net:6380,password=', listKeys(resourceId('Microsoft.Cache/Redis', parameters('redisCacheName')),'2018-03-01').primaryKey, ',ssl=True,abortConnect=False')]"
    },
    "SecondaryConnectionString": {
      "type": "securestring",
      "value": "[concat(parameters('redisCacheName'), '.redis.cache.windows.net:6380,password=', listKeys(resourceId('Microsoft.Cache/Redis', parameters('redisCacheName')),'2018-03-01').secondaryKey, ',ssl=True,abortConnect=False')]"
    }
  }
}
