{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "appServiceName": {
      "type": "string",
      "metadata": {
        "description": "The name of the App Service"
      }
    },
    "appServicePlanName": {
      "type": "string",
      "metadata": {
        "description": "The name of the App Service Plan"
      }
    },
    "appServicePlanResourceGroup": {
      "type": "string",
      "metadata": {
        "description": "Resource Group where the ASP lives"
      }
    },
    "appServiceAppSettings": {
      "type": "array",
      "defaultValue": []
    },
    "appServiceConnectionStrings": {
      "type": "array",
      "defaultValue": []
    },
    "runtimeStack": {
      "type": "string",
      "metadata": {
        "description": "The name of the runtime stack for the container"
      }
    },
    "customHostName": {
      "type": "string",
      "defaultValue": ""
    },
    "certificateThumbprint": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "This can be passed into the template via the reference function: [reference(resourceId(parameters('certificateResourceGroup'), 'Microsoft.Web/certificates', parameters('certificateName')), '2016-03-01').Thumbprint]"
      }
    }
  },
  "variables": {
    "appServicePlanId": "[resourceId(parameters('appServicePlanResourceGroup'), 'Microsoft.Web/serverfarms', parameters('appServicePlanName'))]",
    "useCustomHostname": "[greater(length(parameters('customHostname')), 0)]"
  },
  "resources": [
    {
      "type": "Microsoft.Web/sites",
      "name": "[parameters('appServiceName')]",
      "kind": "app,linux,container",
      "apiVersion": "2016-08-01",
      "location": "[resourceGroup().location]",
      "properties": {
        "clientAffinityEnabled": false,
        "serverFarmId": "[variables('appServicePlanId')]",
        "siteConfig": {
          "alwaysOn": true,
          "appSettings": "[parameters('appServiceAppSettings')]",
          "connectionStrings": "[parameters('appServiceConnectionStrings')]"
        },
        "httpsOnly": true
      },
      "resources": [
        {
          "name": "staging",
          "type": "slots",
          "apiVersion": "2016-08-01",
          "location": "[resourceGroup().location]",
          "properties": {
            "clientAffinityEnabled": false,
            "serverFarmId": "[variables('appServicePlanId')]",
            "siteConfig": {
              "alwaysOn": false,
              "linuxFxVersion": "[parameters('runtimeStack')]",
              "appSettings": "[parameters('appServiceAppSettings')]",
              "connectionStrings": "[parameters('appServiceConnectionStrings')]"
            },
            "httpsOnly": true
          },
          "dependsOn": [
            "[parameters('appServiceName')]"
          ]
        }
      ]
    },
    {
      "type": "Microsoft.Web/sites/hostnameBindings",
      "condition": "[variables('useCustomHostname')]",
      "name": "[concat(parameters('appServiceName'), '/', if(variables('useCustomHostname'), parameters('customHostname'), 'placeholder'))]",
      "apiVersion": "2016-08-01",
      "location": "[resourceGroup().location]",
      "properties": {
        "sslState": "SniEnabled",
        "thumbprint": "[parameters('certificateThumbprint')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', parameters('appServiceName'))]"
      ]
    }
  ],
  "outputs": {
    "possibleOutboundIpAddresses": {
      "type": "array",
      "value": "[split(reference(parameters('appServiceName')).possibleOutboundIpAddresses, ',')]"
    }
  }
}
